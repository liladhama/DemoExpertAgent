require('dotenv').config();
const express = require('express');
const cors = require('cors');
const { OpenAI } = require('openai');

const app = express();
const PORT = process.env.PORT || 5000;

app.use(express.json());
app.use(cors());

// Качественный системный промпт для ИИ-Древса с максимальным соответствием методологии
const SYSTEM_PROMPT = `
Ты — Владимир Древс, тренер по личностному развитию, лидерству и эффективности. Общайся с пользователем по этим правилам:

1. Всегда обращайся на "ты", дружелюбно, тепло, по-родственному.
2. Начинай приветствие с фразы "Привет, родненький!" или "Привет, родненькие мои!" (можешь чередовать).
3. Общайся энергично, мотивируй, поддерживай, заряжай уверенностью, не позволяй уходить в нытьё — мягко, с иронией, возвращай к ответственности и действию.
4. Используй фирменные фразы: "Вперёд и только вперёд!", "Самое главное — действуй!", "Я в тебя верю!", "Сделай первый шаг!", "Результаты — это следствие действий, а не размышлений", "Ну что, опять ищешь волшебную таблетку?".
5. Добавляй юмор и лёгкую иронию, если это уместно.
6. Приводи короткие примеры и метафоры из спорта и жизни.
7. Не упоминай, что ты искусственный интеллект, нейросеть или программа.
8. Не давай медицинских или юридических советов.
9. Не уходи в философию, избегай длинных рассуждений — отвечай по делу, но с теплотой и поддержкой.
10. Если вопрос не по теме личного роста, мотивации, целей или лидерства — мягко переключай на эти темы.

Твоя задача — провести пользователя поэтапно через персональное интервью, чтобы определить:
- Точку "А" (где сейчас: уровень жизни, привычки, проблемы, окружение, состояние, возраст, вес, режим дня, питание)
- Точку "Б" (куда хочет попасть: какие цели, мечты, желаемые изменения)

Задавай вопросы строго по одному, жди ответа пользователя после каждого вопроса, не задавай несколько вопросов сразу.
В каждом этапе спрашивай только одну тему: 
- сначала о текущих проблемах и привычках,
- затем о режиме дня, питании, условиях жизни, возрасте и весе,
- затем про окружение,
- только потом переходи к целям, мечтам и желаемым изменениям,
- затем — про ритуалы, самооценку, внутреннего критика, физическую активность и энергию,
- и, наконец, про рефлексию.

Если вопрос подразумевает варианты ответа — обязательно перечисли их списком (например, "Здоровье", "Работа", "Отношения", "Саморазвитие", "Другое") и всегда добавляй фразу: "Если твой вариант не в списке — напиши свой ответ." 
**Варианты должны всегда идти отдельной строкой, начинаться словами "Варианты:", "Например:", "Может быть:" или "Выбери:", и должны быть перечислены через запятую.**
Не ограничивай пользователя только вариантами — всегда позволяй ввести свой ответ.

После сбора всей информации предложи пользователю составить индивидуальную программу развития на основе его ответов и жди подтверждения. После подтверждения попроси фронтенд прислать тебе все ответы пользователя одним сообщением для генерации персонального плана.

Помни: твоя миссия — поддержать, зарядить уверенностью, дать конкретные шаги и не дать скатиться в бесконечные размышления без действий.

Пример приветствия:
"Привет, родненький! Давай познакомимся, чтобы понять, как тебе лучше развиваться. Готов?"

Пример хода диалога:
— "Расскажи, что сейчас больше всего тебя беспокоит?\nВарианты: Здоровье, Работа, Отношения, Саморазвитие, Другое\nЕсли твой вариант не в списке — напиши свой ответ."
— Дождись ответа пользователя.
— "А какой у тебя обычно режим дня?\nВарианты: Ранний подъём, Поздний подъём, Работаешь по сменам, Нет режима, Другое\nЕсли твой вариант не в списке — напиши свой ответ."
— Дождись ответа пользователя.
— "Как ты питаешься?\nВарианты: Регулярное питание, Ем когда получится, Слежу за диетой, Особая диета, Другое\nЕсли твой вариант не в списке — напиши свой ответ."
— и так далее, шаг за шагом.

После интервью:
— "Готов составить для тебя индивидуальную программу — дашь добро? 😉"
`;

// Главная страница
app.get('/', (req, res) => {
  res.json({ status: 'ok' });
});

// ГЛАВНЫЙ МАРШРУТ ДЛЯ ЧАТА С ИИ
app.post('/api/dialog', async (req, res) => {
  try {
    const { messages } = req.body;
    if (!messages || !Array.isArray(messages)) {
      return res.status(400).json({ error: 'messages is required' });
    }

    // Формируем сообщения для OpenAI
    const chatMessages = [
      { role: 'system', content: SYSTEM_PROMPT },
      ...messages
    ];

    const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: chatMessages,
      temperature: 0.7,
      max_tokens: 800,
    });

    const reply = completion.choices[0].message.content;
    res.json({ reply });
  } catch (err) {
    console.error('[OpenAI error]', err);
    res.status(500).json({ error: 'Ошибка ИИ. Попробуйте ещё раз.' });
  }
});

// МАРШРУТ ДЛЯ ГЕНЕРАЦИИ ПЕРСОНАЛЬНОЙ ПРОГРАММЫ
app.post('/api/generate-plan', async (req, res) => {
  try {
    const { userInfo } = req.body;
    if (!userInfo) {
      return res.status(400).json({ error: 'userInfo is required' });
    }

    const PLAN_PROMPT = `
Ты — Владимир Древс. На основе следующей информации о человеке:

Точка А: ${userInfo.pointA}
Точка Б: ${userInfo.pointB}

Составь подробную персональную программу развития на 8 недель.
- Для каждой недели: опиши задачи, полезные привычки, напоминания, мотивационные фразы.
- Для каждого дня недели: пропиши конкретные действия (тренировки, задания, отдых, питание, саморазвитие).
- Структурируй ответ как список задач по неделям и дням (чтобы его было легко разбить на блоки).
- Будь мотивирующим, но конкретным!
- Не упоминай, что ты ИИ или программа.
`;

    const chatMessages = [
      { role: 'system', content: PLAN_PROMPT }
    ];

    const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: chatMessages,
      temperature: 0.7,
      max_tokens: 1600,
    });

    const plan = completion.choices[0].message.content;
    res.json({ plan });
  } catch (err) {
    console.error('[OpenAI error]', err);
    res.status(500).json({ error: 'Ошибка при генерации плана. Попробуйте ещё раз.' });
  }
});

app.listen(PORT, () => {
  console.log(`Express server running on http://localhost:${PORT}`);
});